<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:controls="using:Uno.Material.Controls"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:ios="http://uno.ui/ios"
					xmlns:android="http://uno.ui/android"
					xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:wasm="http://uno.ui/wasm"
					xmlns:not_win="http://uno.ui/not_win"
					mc:Ignorable="d ios android wasm not_win">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Application/Colors.xaml" />
		<ResourceDictionary Source="../Application/SelectionControlColors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!-- Contained Button Colors and Variables -->
	<SolidColorBrush x:Key="ButtonContainedBackgroundColor"
					 Color="{ThemeResource PrimaryColor}" />
	<SolidColorBrush x:Key="ButtonContainedLabelColor"
					 Color="{ThemeResource OnPrimaryColor}" />

	<!-- Outlined Button Variables -->
	<SolidColorBrush x:Key="ButtonOutlinedBackgroundColor"
					 Color="{ThemeResource OnPrimaryColor}" />
	<SolidColorBrush x:Key="ButtonOutlinedStrokeColor"
					 Color="{ThemeResource PrimaryColor}" />
	<SolidColorBrush x:Key="ButtonOutlinedLabelColor"
					 Color="{ThemeResource PrimaryColor}" />

	<StaticResource x:Key="ButtonOutlinedDisabledColor"
					ResourceKey="OnSurfaceDisabledBrush" />
	<StaticResource x:Key="ButtonOutlinedRippleColor"
					ResourceKey="OnSurfacePressedBrush" />
	<StaticResource x:Key="ButtonOutlinedSelectedOverlayColor"
					ResourceKey="OnSurfaceSelectedBrush" />

	<Thickness x:Key="ButtonOutlinedStrokeWidth">1</Thickness>

	<!-- Text Button Variables -->
	<SolidColorBrush x:Key="ButtonTextLabelColor"
					 Color="{ThemeResource PrimaryColor}" />
	<StaticResource x:Key="ButtonTextBackgroundColor"
					ResourceKey="TransparentBrush" />
	<StaticResource x:Key="ButtonTextDisabledColor"
					ResourceKey="OnSurfaceDisabledBrush" />
	<StaticResource x:Key="ButtonTextFocusOverlayColor"
					ResourceKey="OnSurfaceFocusedBrush" />

	<StaticResource x:Key="ButtonTextSelectedOverlayColor"
					ResourceKey="OnSurfaceFocusedBrush" />
	<StaticResource x:Key="ButtonTextRippleColor"
					ResourceKey="OnSurfaceFocusedBrush" />

	<!-- Floating Action Button Variables -->
	<SolidColorBrush x:Key="FabBackgroundColor"
					 Color="{StaticResource SecondaryColor}" />
	<SolidColorBrush x:Key="FabIconColor"
					 Color="{StaticResource OnSurfaceColor}" />
	<SolidColorBrush x:Key="FabLabelColor"
					 Color="{StaticResource OnSurfaceColor}" />
	<StaticResource x:Key="ButtonFabRippleColor"
					ResourceKey="OnSurfaceFocusedBrush" />
	<StaticResource x:Key="ButtonFabFocusOverlayBackgroundColor"
					ResourceKey="TransparentBrush" />
	<StaticResource x:Key="ButtonFabFocusOverlayBorderColor"
					ResourceKey="OnPrimaryBrush" />

	<CornerRadius x:Key="FabBorderRadius">23</CornerRadius>
	<x:Double x:Key="FabLargeAreaSize">56</x:Double>
	<x:Double x:Key="FabSmallAreaSize">40</x:Double>

	<!-- All Button Variables -->
	<StaticResource x:Key="ButtonDisabledBackgroundColor"
					ResourceKey="OnSurfaceDisabledBrush" />
	<StaticResource x:Key="ButtonDisabledLabelColor"
					ResourceKey="OnSurfaceMediumBrush" />

	<StaticResource x:Key="ButtonHoverBackgroundColor"
					ResourceKey="OnPrimaryHoverBrush" />

	<StaticResource x:Key="ButtonFocusedBackgroundColor"
					ResourceKey="OnPrimaryFocusedBrush" />
	<StaticResource x:Key="ButtonRippleColor"
					ResourceKey="OnPrimaryPressedBrush" />

	<StaticResource x:Key="ButtonHoverOverlayColor"
					ResourceKey="OnSurfaceHoverBrush" />
	<StaticResource x:Key="ButtonFocusOverlayColor"
					ResourceKey="OnSurfaceFocusedBrush" />
	<StaticResource x:Key="ButtonSelectedOverlayColor"
					ResourceKey="OnPrimarySelectedBrush" />
	<StaticResource x:Key="ButtonPressBorderBrushColor"
					ResourceKey="OnSurfacePressedBrush" />

	<CornerRadius x:Key="ButtonBorderRadius">4</CornerRadius>
	<FontFamily x:Key="ButtonFontFamily">Roboto</FontFamily>
	<x:Double x:Key="ButtonFontSize">14</x:Double>
	<Thickness x:Key="ButtonPadding">16,8</Thickness>

	<Style x:Key="ContainedMaterialButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource ButtonContainedLabelColor}" />
		<Setter Property="Background"
				Value="{StaticResource ButtonContainedBackgroundColor}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{ThemeResource ButtonPadding}" />
		<!--<Setter Property="CornerRadius"
				Value="{StaticResource ButtonBorderRadius}" />-->
		<Setter Property="MinHeight"
				Value="40" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ButtonFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ButtonFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{StaticResource ButtonBorderRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.3"
														 BeginTime="0:0:1"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Root.Background"
												Value="{StaticResource ButtonDisabledBackgroundColor}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource ButtonDisabledLabelColor}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="HoverOverlay"
								Background="{StaticResource ButtonHoverBackgroundColor}"
								Opacity="0" />

						<Border x:Name="FocusedOverlay"
								Background="{StaticResource ButtonFocusedBackgroundColor}"
								Opacity="0" />

						<!-- Todo: Add ElevatedView on Dragged/Selected state of button
								Background="{StaticResource ButtonSelectedOverlayColor}" -->
						<Border x:Name="SelectedOverlay"
								Opacity="0" />

						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{StaticResource ButtonRippleColor}"
										 RippleSizeMultiplier="0.75"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 Content="{TemplateBinding Content}"
										 ContentTemplate="{TemplateBinding ContentTemplate}"
										 ContentTransitions="{TemplateBinding ContentTransitions}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 FontFamily="{TemplateBinding FontFamily}"
										 FontSize="{TemplateBinding FontSize}"
										 Padding="{TemplateBinding Padding}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="OutlinedMaterialButtonStyle"
		   TargetType="Button">

		<Setter Property="Foreground"
				Value="{StaticResource ButtonOutlinedLabelColor}" />
		<Setter Property="Background"
				Value="{StaticResource ButtonOutlinedBackgroundColor}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ButtonOutlinedStrokeColor}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource ButtonOutlinedStrokeWidth}" />
		<Setter Property="Padding"
				Value="{StaticResource ButtonPadding}" />
		<!--<Setter Property="CornerRadius"
				Value="{StaticResource ButtonBorderRadius}" />-->
		<Setter Property="MinHeight"
				Value="40" />
		<Setter Property="FontFamily"
				Value="{StaticResource ButtonFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource ButtonFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{StaticResource ButtonBorderRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource ButtonHoverOverlayColor}" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.25"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource ButtonPressBorderBrushColor}" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SelectedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.3"
														 BeginTime="0:0:1"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource ButtonOutlinedDisabledColor}" />
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource ButtonOutlinedDisabledColor}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="HoverOverlay"
								Background="{StaticResource ButtonHoverOverlayColor}"
								Opacity="0" />

						<Border x:Name="FocusedOverlay"
								Background="{StaticResource ButtonFocusOverlayColor}"
								Opacity="0" />

						<!-- Todo: Add ElevatedView on Dragged/Selected state of button -->
						<Border x:Name="SelectedOverlay"
								Background="{StaticResource ButtonOutlinedSelectedOverlayColor}"
								Opacity="0" />

						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{StaticResource ButtonOutlinedRippleColor}"
										 RippleSizeMultiplier="0.75"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 Content="{TemplateBinding Content}"
										 ContentTemplate="{TemplateBinding ContentTemplate}"
										 ContentTransitions="{TemplateBinding ContentTransitions}"
										 CornerRadius="{StaticResource ButtonBorderRadius}"
										 FontFamily="{TemplateBinding FontFamily}"
										 FontSize="{TemplateBinding FontSize}"
										 Padding="{TemplateBinding Padding}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TextMaterialButtonStyle"
		   TargetType="Button"
		   BasedOn="{StaticResource ContainedMaterialButtonStyle}">

		<Setter Property="Foreground"
				Value="{StaticResource ButtonTextLabelColor}" />
		<Setter Property="Background"
				Value="{StaticResource ButtonTextBackgroundColor}" />
		<Setter Property="BorderThickness"
				Value="0" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">

					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{StaticResource ButtonBorderRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.25"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource ButtonTextDisabledColor}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="HoverOverlay"
								Background="{StaticResource ButtonHoverOverlayColor}"
								Opacity="0" />

						<Border x:Name="FocusedOverlay"
								Background="{StaticResource ButtonFocusOverlayColor}"
								Opacity="0" />

						<!-- Todo: Add ElevatedView on Dragged/Selected state of button -->
						<Border x:Name="SelectedOverlay"
								Background="{StaticResource ButtonTextSelectedOverlayColor}"
								Opacity="0" />

						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{StaticResource ButtonTextRippleColor}"
										 RippleSizeMultiplier="0.85"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 Content="{TemplateBinding Content}"
										 ContentTemplate="{TemplateBinding ContentTemplate}"
										 ContentTransitions="{TemplateBinding ContentTransitions}"
										 CornerRadius="{StaticResource ButtonBorderRadius}"
										 FontFamily="{TemplateBinding FontFamily}"
										 FontSize="{TemplateBinding FontSize}"
										 Padding="{TemplateBinding Padding}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Known Issue - Ellipse Fill with SolidColorBrushes that contain opacity is merged -->
	<!-- Known Issue - VisualState Setters can not be applied inside ElevatedView -->
	<!-- Known Issue - Wasm ElevatedView is cut off for some shapes (including ellipses) -->
	<Style x:Key="FabMaterialButtonStyle"
		   TargetType="Button">

		<Setter Property="Background"
				Value="{StaticResource FabBackgroundColor}" />
		<Setter Property="Foreground"
				Value="{StaticResource FabIconColor}" />
		<Setter Property="Height"
				Value="{StaticResource FabLargeAreaSize}" />
		<Setter Property="Width"
				Value="{StaticResource FabLargeAreaSize}" />
		<Setter Property="FontFamily"
				Value="{StaticResource ButtonFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource ButtonFontSize}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Margin"
				Value="0" />
		<Setter Property="Padding"
				Value="0" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Fill"
												Value="{StaticResource ButtonHoverOverlayColor}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Fill"
												Value="{StaticResource ButtonFocusOverlayColor}" />
										<Setter Target="FabFocusBorder.StrokeThickness"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Fill"
												Value="{StaticResource ButtonFocusOverlayColor}" />
										<Setter Target="FabFocusBorder.StrokeThickness"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup>

								<!-- Known Issue - Must be applied before smalldevices else issues on wasm and ios -->
								<VisualState x:Name="OtherDevices">
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="460" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="FabButton.Width"
												Value="{StaticResource FabLargeAreaSize}" />
										<Setter Target="FabButton.Height"
												Value="{StaticResource FabLargeAreaSize}" />
										<Setter Target="FabBorder.Width"
												Value="{StaticResource FabLargeAreaSize}" />
										<Setter Target="FabBorder.Height"
												Value="{StaticResource FabLargeAreaSize}" />
										<Setter Target="FabFocusBorder.Width"
												Value="{StaticResource FabLargeAreaSize}" />
										<Setter Target="FabFocusBorder.Height"
												Value="{StaticResource FabLargeAreaSize}" />
										<android:Setter Target="Ripple.MinWidth"
														Value="{StaticResource FabLargeAreaSize}" />
										<android:Setter Target="Ripple.MinHeight"
														Value="{StaticResource FabLargeAreaSize}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="SmallDevices">
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="0" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="FabButton.Width"
												Value="{StaticResource FabSmallAreaSize}" />
										<Setter Target="FabButton.Height"
												Value="{StaticResource FabSmallAreaSize}" />
										<Setter Target="FabBorder.Width"
												Value="{StaticResource FabSmallAreaSize}" />
										<Setter Target="FabBorder.Height"
												Value="{StaticResource FabSmallAreaSize}" />
										<Setter Target="FabFocusBorder.Width"
												Value="{StaticResource FabSmallAreaSize}" />
										<Setter Target="FabFocusBorder.Height"
												Value="{StaticResource FabSmallAreaSize}" />
										<android:Setter Target="Ripple.MinWidth"
														Value="{StaticResource FabSmallAreaSize}" />
										<android:Setter Target="Ripple.MinHeight"
														Value="{StaticResource FabSmallAreaSize}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<controls:Ripple x:Name="Ripple"
										 Feedback="{StaticResource ButtonFabRippleColor}"
										 CornerRadius="{StaticResource FabBorderRadius}"
										 RippleSizeMultiplier="0.9">
							<Grid>

								<toolkit:ElevatedView x:Name="FabButton"
													  Elevation="6"
													  wasm:Margin="0,0,6,6"
													  ShadowColor="Black"
													  IsHitTestVisible="False"
													  Background="{StaticResource TransparentBrush}"
													  CornerRadius="{StaticResource FabBorderRadius}"
													  Width="{TemplateBinding Width}"
													  Height="{TemplateBinding Height}">
									<Grid>

										<Ellipse x:Name="FabBorder"
												 Width="{TemplateBinding Width}"
												 Height="{TemplateBinding Height}"
												 Fill="{TemplateBinding Background}"
												 Stroke="{TemplateBinding BorderBrush}"
												 StrokeThickness="0"
												 IsHitTestVisible="False" />

										<ContentPresenter x:Name="ContentPresenter"
														  BorderBrush="{TemplateBinding BorderBrush}"
														  BorderThickness="{TemplateBinding BorderThickness}"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  CornerRadius="{TemplateBinding CornerRadius}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontSize="{TemplateBinding FontSize}"
														  Padding="{TemplateBinding Padding}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
														  AutomationProperties.AccessibilityView="Raw" />
									</Grid>
								</toolkit:ElevatedView>

								<Ellipse x:Name="FabFocusBorder"
										 wasm:Margin="0,0,6,6"
										 Width="{TemplateBinding Width}"
										 Height="{TemplateBinding Height}"
										 Fill="{StaticResource ButtonFabFocusOverlayBackgroundColor}"
										 Stroke="{StaticResource ButtonFabFocusOverlayBorderColor}"
										 StrokeThickness="0" />
							</Grid>
						</controls:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Known Issue - Ellipse Fill with SolidColorBrushes that contain opacity is merged -->
	<!-- Known Issue - VisualState Setters can not be applied inside ElevatedView -->
	<Style x:Key="FabLabelMaterialButtonStyle"
		   TargetType="Button">

		<Setter Property="Background"
				Value="{StaticResource FabBackgroundColor}" />
		<Setter Property="Foreground"
				Value="{StaticResource FabLabelColor}" />
		<Setter Property="FontFamily"
				Value="{StaticResource ButtonFontFamily}" />
		<Setter Property="FontSize"
				Value="{StaticResource ButtonFontSize}" />
		<!-- Issue #143 Android needs more height than other platforms to have proper button sizing -->
		<android:Setter Property="MinHeight"
						Value="60" />
		<Setter Property="MinHeight"
							Value="48" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Margin"
				Value="0" />
		<Setter Property="Padding"
				Value="0" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<VisualStateManager.VisualStateGroups>

							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Background"
												Value="{StaticResource ButtonHoverOverlayColor}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Background"
												Value="{StaticResource ButtonFocusOverlayColor}" />
										<Setter Target="FabFocusBorder.BorderThickness"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FabFocusBorder.Background"
												Value="{StaticResource ButtonFocusOverlayColor}" />
										<Setter Target="FabFocusBorder.BorderThickness"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<controls:Ripple Feedback="{StaticResource ButtonFabRippleColor}"
										 RippleSizeMultiplier="0.75"
										 CornerRadius="{StaticResource FabBorderRadius}"
										 HorizontalContentAlignment="Stretch"
										 VerticalContentAlignment="Stretch">
							<Grid>
								<!-- Issue #144 Wasm and Android need extra margin to properly draw their elevation -->
								<toolkit:ElevatedView Elevation="6"
													  wasm:Margin="0,0,6,6"
													  android:Margin="2,2,2,6"
													  ShadowColor="Black"
													  IsHitTestVisible="False"
													  Background="{StaticResource ButtonFabFocusOverlayBackgroundColor}"
													  CornerRadius="{StaticResource FabBorderRadius}">
									<Grid>

										<Grid x:Name="FabBorder"
											  CornerRadius="{StaticResource FabBorderRadius}"
											  Background="{TemplateBinding Background}"
											  BorderBrush="{TemplateBinding BorderBrush}"
											  BorderThickness="0" />

										<ContentPresenter x:Name="ContentPresenter"
														  BorderBrush="{TemplateBinding BorderBrush}"
														  BorderThickness="{TemplateBinding BorderThickness}"
														  Content="{TemplateBinding Content}"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  ContentTransitions="{TemplateBinding ContentTransitions}"
														  CornerRadius="{TemplateBinding CornerRadius}"
														  FontFamily="{TemplateBinding FontFamily}"
														  FontSize="{TemplateBinding FontSize}"
														  Padding="{TemplateBinding Padding}"
														  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
														  AutomationProperties.AccessibilityView="Raw" />
									</Grid>
								</toolkit:ElevatedView>

								<Grid x:Name="FabFocusBorder"
									  wasm:Margin="0,0,6,6"
									  android:Margin="2,2,2,6"
									  CornerRadius="{StaticResource FabBorderRadius}"
									  Background="{StaticResource ButtonFabFocusOverlayBackgroundColor}"
									  BorderBrush="{StaticResource ButtonFabFocusOverlayBorderColor}"
									  BorderThickness="0" />
							</Grid>
						</controls:Ripple>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SeeStyleFlyoutButtonStyle"
		   TargetType="Button">

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="Root">

						<not_win:VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="ContentPresenter_NotWin.Visibility"
												Value="Visible" />
										<Setter Target="HeaderText.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="ContentPresenter_NotWin.Visibility"
												Value="Visible" />
										<Setter Target="HeaderText.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</not_win:VisualStateManager.VisualStateGroups>

						<win:Button Content="See Style"
									FontSize="10"
									Style="{StaticResource TextMaterialButtonStyle}"
									Margin="12,0">
							<Button.Flyout>
								<Flyout>
									<ContentPresenter x:Name="ContentPresenter"
													  BorderBrush="{TemplateBinding BorderBrush}"
													  BorderThickness="{TemplateBinding BorderThickness}"
													  Content="{TemplateBinding Content}"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentTransitions="{TemplateBinding ContentTransitions}"
													  CornerRadius="{TemplateBinding CornerRadius}"
													  FontFamily="{TemplateBinding FontFamily}"
													  FontSize="{TemplateBinding FontSize}"
													  Padding="{TemplateBinding Padding}"
													  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
													  AutomationProperties.AccessibilityView="Raw" />
								</Flyout>
							</Button.Flyout>
						</win:Button>

						<!-- Known Issue - Windows solution does not work on other platforms, content of flyout remains empty -->
						<not_win:TextBlock x:Name="HeaderText"
										   Text="See Style"
										   Foreground="{StaticResource PrimaryBrush}"
										   FontSize="10"
										   Margin="12,0" />

						<not_win:ContentPresenter x:Name="ContentPresenter_NotWin"
												  Content="{TemplateBinding Content}"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  AutomationProperties.AccessibilityView="Raw"
												  Margin="12,0"
												  Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
